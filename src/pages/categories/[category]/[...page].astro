---
import type { CollectionEntry } from "astro:content";
import Pagination from "@/components/Paginator.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import { getAllPosts, getUniqueCategories, sortMDByDate } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import type { GetStaticPaths, Page } from "astro";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
	const allPosts = await getAllPosts();
	const allPostsByDate = sortMDByDate(allPosts);
	const uniqueCategories = getUniqueCategories(allPostsByDate);

	return uniqueCategories.flatMap((category) => {
		const filterPosts = allPostsByDate.filter((post) => post.data.categories.includes(category));
		return paginate(filterPosts, {
			pageSize: 10,
			params: { category },
		});
	});
};

interface Props {
	page: Page<CollectionEntry<"post">>;
}

const { page } = Astro.props as unknown as Props;
const { category } = Astro.params;

const meta = {
	description: `View all posts with the category - ${category}`,
	title: `Category: ${category}`,
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: "← Previous Category",
			url: page.url.prev,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			text: "Next Category →",
			url: page.url.next,
		},
	}),
};
---

<PageLayout meta={meta}>
	<h1 class="title mb-6 flex items-center">
		<span class="text-xl capitalize">{category}</span>
	</h1>
	<section aria-label="Blog post list">
		<ul class="space-y-8">
			{
				page.data.map((p) => (
					<li class="flex flex-col flex-wrap gap-2 sm:flex-row [&_q]:basis-full">
						<PostPreview as="h2" post={p} withDesc />
					</li>
				))
			}
		</ul>
		<Pagination {...paginationProps} />
	</section>
</PageLayout>
